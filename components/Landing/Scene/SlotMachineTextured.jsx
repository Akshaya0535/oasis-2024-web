/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useLayoutEffect, useRef } from 'react'
import { useGLTF, useScroll } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import gsap from 'gsap'

export function SlotMachine2(props) {
    const { nodes, materials } = useGLTF('/Models/slotMachineSplitMeshBtn.glb')

    const tl = useRef()
    const slotMachine = useRef()
    const scroll = useScroll()

    useFrame(() => {
        tl.current.seek(scroll.offset * tl.current.duration())
    })

    useLayoutEffect(() => {
        tl.current = gsap.timeline()

        tl.current.to(
            slotMachine.current.rotation,
            {
                duration: 0.5,
                y: -Math.PI / 6,
                ease: 'sine.inOut'
            },
            0
        )
        tl.current.to(
            slotMachine.current.position,
            {
                duration: 0.5,
                x: -0.9,
                z: -0.5,
                ease: 'sine.inOut'
            },
            0
        )
        tl.current.to(
            slotMachine.current.rotation,
            {
                duration: 0.45,
                y: -Math.PI / 4,
                ease: 'sine.inOut'
            },
            0.5
        )
    }, [])

    return (
        <group ref={slotMachine} {...props} dispose={null}>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Sphere001.geometry}
                material={materials.MapTest}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Sphere002.geometry}
                material={materials.MapTest}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Sphere003.geometry}
                material={materials.MapTest}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Sphere004.geometry}
                material={materials.MapTest}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Sphere005.geometry}
                material={materials.MapTest}
            />
        </group>
    )
}

useGLTF.preload('/Models/slotMachineSplitMeshBtn.glb')