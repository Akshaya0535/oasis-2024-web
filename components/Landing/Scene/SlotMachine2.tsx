"use client";

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, forwardRef } from "react";
import { Html, useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import * as THREE from "three";

type GLTFResult = GLTF & {
  nodes: {
    Sphere001: THREE.Mesh;
    Sphere002: THREE.Mesh;
    Sphere003: THREE.Mesh;
    Sphere004: THREE.Mesh;
    Sphere005: THREE.Mesh;
  };
  materials: {
    MapTest: THREE.MeshStandardMaterial;
  };
};

interface Props {
  video: string;
  setIs3dLoaded: (value: boolean) => void;
}

export const SlotMachine2 = forwardRef(function SlotMachine2(
  { video, setIs3dLoaded, ...props }: Props,
  ref: any
) {
  const { nodes, materials } = useGLTF("/Models/slotMachine.glb") as GLTFResult;

  const screen: any = useRef();

  useEffect(() => {
    setIs3dLoaded(true);
  }, []);

  return (
    <group ref={ref} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sphere001.geometry}
        material={materials.MapTest}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sphere002.geometry}
        material={materials.MapTest}
        position={[0.008, 0.317, -0.235]}
        ref={screen}
      >
        <Html
          transform
          wrapperClass="htmlScreen"
          distanceFactor={0.31000000000000005}
          position={[0, 0, 0]}
          rotation={[0.4510000000000003, 0, 0]}
        >
          <iframe
            src="https://www.youtube.com/embed/ZCrClSBM1ns"
            title="OASIS 2023 | Official Curtain Raiser"
          />
        </Html>
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sphere003.geometry}
        material={materials.MapTest}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sphere004.geometry}
        material={materials.MapTest}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sphere005.geometry}
        material={materials.MapTest}
      />
    </group>
  );
});

useGLTF.preload("/Models/slotMachine.glb");
